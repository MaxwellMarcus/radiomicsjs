import { readAsArrayBuffer } from 'promise-file-reader';
import createWebWorkerPromise from '../core/internal/createWebWorkerPromise.js';
import config from '../itkConfig.js';
async function readMeshBlob(webWorker, blob, fileName, mimeType) {
    let worker = webWorker;
    return await createWebWorkerPromise('mesh-io', worker)
        .then(async ({ webworkerPromise, worker: usedWorker }) => {
        worker = usedWorker;
        return await readAsArrayBuffer(blob)
            .then(arrayBuffer => {
            return webworkerPromise.postMessage({ operation: 'readMesh', name: fileName, type: mimeType, data: arrayBuffer, config: config }, [arrayBuffer]);
        }).then(async function (mesh) {
            return await Promise.resolve({ mesh, webWorker: worker });
        });
    });
}
export default readMeshBlob;
